name: Create Rust release

on: [ push ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
            target: x86_64-unknown-linux-musl
            target: x86_64-apple-darwin

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - if: ${{ contains(matrix.target, '-musl') }}
          run: sudo apt-get install musl-tools
      - name: Build
        run: cargo build --release --verbose --target=${{ matrix.target }} --manifest-path rozy/Cargo.toml
      - name: Ensure version is correct
        run: |
          (cargo run --release --target=${{ matrix.target }} -- --version) | grep "version$(echo ${{ github.ref_name }} | tr 'v' ' '})"
      - uses: actions/upload-artifact@v2
        with:
          name: ozy
          path: rozy/target/${{ matrix.target }}/release/ozy

#  upload:
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download all workflow run artifacts
#        uses: actions/download-artifact@v3
#      - name: Upload binaries to release
#        uses: marvinpinto/action-automatic-releases@latest
#        with:
#          repo_token: "${{ secrets.GITHUB_TOKEN }}"
#          prerelease: true
#          files: "**/ozy"

#  cargo:
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: katyo/publish-crates@v1
#        with:
#          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
